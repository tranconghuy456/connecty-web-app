import { UserTokenModel } from "../models/User.model";
import jwt from "jsonwebtoken";
import ENV from "../config.js";

// Generate token
export default generateTokens = async (user) => {
  try {
    const payload = {
      _id: user._id,
      role: user.role,
      isActived: user.isActived,
    };
    const accessToken = jwt.sign(payload, ENV.ACCESS_TOKEN_PRIVATE_KEY, {
      expiresIn: "14m",
    });
    const refreshToken = jwt.sign(payload, ENV.REFRESH_TOKEN_PRIVATE_KEY, {
      expiresIn: "30d",
    });

    // generate token
    const UserToken = await UserTokenModel.findOne({ userId: user._id });
    if (UserToken) await UserToken.remove();
    // save token to db
    await new UserToken({ userId: user._id, token: refreshToken }).save();
    return Promise.resolve({ accessToken, refreshToken });
  } catch (error) {
    Promise.reject(error);
  }
};
